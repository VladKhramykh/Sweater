package com.example.app.Repositories;import com.example.app.Repositories.dao.MessageDao;import com.example.app.config.HibernateUtil;import com.example.app.domain.Message;import com.example.app.domain.User;import org.hibernate.Session;import org.hibernate.SessionFactory;import org.hibernate.Transaction;import org.hibernate.query.Query;import java.util.List;public class MessageRepo implements MessageDao {    private static SessionFactory sessionFactory;    static {        sessionFactory = HibernateUtil.getSessionFactory();    }    @Override    public Message getById(Long id) {        return null;    }    @Override    public List<Message> getByTag(String tag) {        Session session = null;        Transaction transaction = null;        List messages = null;        try{            session = sessionFactory.openSession();            transaction = session.beginTransaction();            Query query = session.createSQLQuery("CALL GetMessageByTag(:tag)")                    .addEntity(Message.class)                    .setParameter("tag", tag);            messages = query.list();        } catch (Exception e){            System.out.println("ERROR");            if(transaction != null)                transaction.commit();        } finally {            session.close();        }        return messages;    }    @Override    public List<Message> getAll() {        Session session = null;        Transaction transaction = null;        List messages = null;        try{            session = sessionFactory.openSession();            transaction = session.beginTransaction();            Query query = session.createSQLQuery("CALL GetAllMessages()")                    .addEntity(Message.class);            messages = query.list();        } catch (Exception e){            transaction.commit();;            System.out.println("ERROR");        } finally {            session.close();        }        return messages;    }    @Override    public void update(Message message) {    }    @Override    public void delete(Message message) {    }    @Override    public List<Message> getByUser(User user) {        return null;    }}