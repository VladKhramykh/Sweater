package com.example.app.service;import com.example.app.Repositories.MessageRepo;import com.example.app.domain.Message;import com.example.app.domain.User;import com.example.app.domain.dto.MessageDto;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageImpl;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;import java.util.Collections;import java.util.List;@Servicepublic class MessageService {    private MessageRepo messageRepo = new MessageRepo();    public Page<MessageDto> getPaginatorDto(List<MessageDto> messages, Pageable pageable){        int pageSize = pageable.getPageSize();        int currentPage = pageable.getPageNumber();        int startItem = currentPage * pageSize;        int size = messages.size();        if(size  < startItem) {            messages = Collections.emptyList();        } else {            int toIndex = Math.min(startItem + pageSize, size);            messages = messages.subList(startItem, toIndex);        }        Page<MessageDto> messagePage = new PageImpl<MessageDto>(messages, PageRequest.of(currentPage, pageSize), size);        return messagePage;    }    public Page<MessageDto> findPaginatorBySubsAndTagDto(User user, String tag, Pageable pageable) {        int pageSize = pageable.getPageSize();        int currentPage = pageable.getPageNumber();        int startItem = currentPage * pageSize;        List<MessageDto> list = null;        if(tag != null && !tag.isEmpty()){            list = messageRepo.getAllMessageBySubsAndTagDto(user, tag);        } else {            list = messageRepo.getAllMessageBySubsDto(user);        }        int size = list.size();        if(list.size() < startItem) {            list = Collections.emptyList();        } else {            int toIndex = Math.min(startItem + pageSize, list.size());            list = list.subList(startItem, toIndex);        }        Page<MessageDto> messagePage = new PageImpl<MessageDto>(list, PageRequest.of(currentPage, pageSize), size);        return messagePage;    }}